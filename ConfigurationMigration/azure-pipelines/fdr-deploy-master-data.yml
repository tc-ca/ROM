trigger: none
pr: none

variables:
  - name: basePath
    value: "$(Build.SourcesDirectory)/ConfigurationMigration"
  - name: tempDirectory
    value: "$(Agent.TempDirectory)"
  - name: dataFileName
    value: "MasterData-FDR.zip"
  - name: logWriteDirectory
    value: "$(basepath)/logs/import"
  - name: extractFolder
    value: "$(basepath)/data/fdr"
  - name: combineDataXmlFile
    value: $true
  - name: currentDate
    value: $[format('D{0:dd}.{0:MM}.{0:yyyy}T{0:HH}.{0:mm}', pipeline.startTime)]

stages:
- stage: Stage_Pack_Data_and_Publish_Artifact
  pool:
      vmImage: 'windows-latest'
  jobs:
  - job: Pack_Data_and_Publish_Artifact

    steps:
    - checkout: self
      persistCredentials: true
      clean: true
      
    - task: PowerShell@2
      name: "DebugPowershellScript"
      inputs:
        targetType: 'inline'
        script: |
          Write-Host "writing zip file to $(tempDirectory)/$(dataFileName)"
          Write-Host "Compressing files from $(extractFolder)"
          Write-Host "listing files from $(extractFolder)"
          ls $(extractFolder)          
          Write-Host "listing files from $(tempDirectory)"
          ls $(tempDirectory)

    - task: PowerShell@2
      name: "Pack_Master_Data_From_SC"
      inputs:
        targetType: 'inline'
        script: |
          Install-Module -Name Xrm.Framework.CI.PowerShell.Cmdlets -Force
          Compress-XrmCMData -DataZip "$(tempDirectory)/$(dataFileName)" -Folder "$(extractFolder)" -CombineDataXmlFile $(combineDataXmlFile)

    - task: PowerShell@2
      name: "DebugPowershellScript2"
      inputs:
        targetType: 'inline'
        script: |
          Write-Host "listing files after data compression from $(tempDirectory)"
          ls $(tempDirectory)

    - task: PublishBuildArtifacts@1
      name: Create_Artifact_Packed_Data
      inputs:
        PathtoPublish: '$(tempDirectory)/$(dataFileName)'
        ArtifactName: 'PackedData.$(currentDate)'
        publishLocation: 'Container'

- stage: Stage_MasterData_to_QA
  dependsOn: Stage_Pack_Data_and_Publish_Artifact
  pool:
      vmImage: 'windows-latest'
  jobs:
  - deployment: Deploy
    displayName: Deploy_MasterData_to_QA
    environment: QA-TDG
    cancelTimeoutInMinutes: 2
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: none
          # - task: DownloadBuildArtifacts@1
          #   inputs:
          #     buildType: 'current'
          #     downloadType: 'single'
          #     artifactName: 'PackedData.$(currentDate)'
          #     downloadPath: '$(System.ArtifactsDirectory)'
          
          - task: PowerShell@2
            name: "DebugPowershellScript"
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "listing build.ArtifactStagingDirectory"
                ls $(Build.ArtifactStagingDirectory) 
                Write-Host "using file name = $(Build.ArtifactStagingDirectory)\PackedData.$(currentDate)\$(dataFileName)"

          - task: PowerShell@2
            name: "Import_Data_QA"
            inputs:
              targetType: 'inline'
              script: |
                Install-Module -Name Microsoft.Xrm.Tooling.ConfigurationMigration -force
                
                If(!(test-path "$(logWriteDirectory)"))
                {
                    Write-Host "$(logWriteDirectory) folder does not exists."
                    New-Item -ItemType Directory -Force -Path "$(logWriteDirectory)"
                    Write-Host "$(logWriteDirectory) folder created."
                }
                
                Import-CrmDataFile -CrmConnection "$(ConnectionStringQA)" -Datafile "$(System.ArtifactsDirectory)\PackedData.$(currentDate)\$(dataFileName)" -Verbose -LogWriteDirectory "$(logWriteDirectory)"
              warningPreference: 'stop'
              failOnStderr: true
              showWarnings: true
              
          - task: PowerShell@2
            name: "Print_Logs"
            condition: always()
            inputs:
              targetType: 'inline'
              script: |
                cd $(Build.SourcesDirectory)/ConfigurationMigration/Logs/import
                cat *

- stage: Deploy_MasterData_to_ACC
  dependsOn: Stage_Pack_Data_and_Publish_Artifact
  pool:
      vmImage: 'windows-latest'
  jobs:
  - deployment: Deploy
    displayName: Deploy_MasterData_to_ACC
    environment: ACC-TDG
    cancelTimeoutInMinutes: 2
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: none

          - task: DownloadBuildArtifacts@1
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'PackedData.$(currentDate)'
              downloadPath: '$(System.ArtifactsDirectory)'

          - task: PowerShell@2
            name: "Import_Data_ACC"
            inputs:
              targetType: 'inline'
              script: |
                Install-Module -Name Microsoft.Xrm.Tooling.ConfigurationMigration -force
                
                If(!(test-path "$(logWriteDirectory)"))
                {
                    Write-Host "$(logWriteDirectory) folder does not exists."
                    New-Item -ItemType Directory -Force -Path "$(logWriteDirectory)"
                    Write-Host "$(logWriteDirectory) folder created."
                }
                
                Import-CrmDataFile -CrmConnection "$(ConnectionStringACC)" -Datafile "$(System.ArtifactsDirectory)\PackedData.$(currentDate)\$(dataFileName)" -Verbose -LogWriteDirectory "$(logWriteDirectory)"
              warningPreference: 'stop'
              failOnStderr: true
              showWarnings: true
              
          - task: PowerShell@2
            name: "Print_Logs"
            condition: always()
            inputs:
              targetType: 'inline'
              script: |
                cd $(Build.SourcesDirectory)/ConfigurationMigration/Logs/import
                cat *

- stage: Deploy_MasterData_to_AccData
  dependsOn: Stage_Pack_Data_and_Publish_Artifact
  pool:
      vmImage: 'windows-latest'
  jobs:
  - deployment: Deploy
    displayName: Deploy_MasterData_to_ACCDATA
    environment: ACC-TDG-DATA
    cancelTimeoutInMinutes: 2
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: none
          
          - task: PowerShell@2
            name: "DebugPowershellScript"
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "listing $(Build.ArtifactStagingDirectory)"
                ls $(Build.ArtifactStagingDirectory) 
                Write-Host "listing $(Agent.BuildDirectory)"
                ls $(Agent.BuildDirectory) 
                Write-Host "using file name = $(Agent.BuildDirectory)\PackedData.$(currentDate)\$(dataFileName)"
                Write-Host "ConnectionString = $(ConnectionStringACCDATA)"

          - task: PowerShell@2
            name: "Import_Data_ACCDATA"
            inputs:
              targetType: 'inline'
              script: |
                Install-Module -Name Microsoft.Xrm.Tooling.ConfigurationMigration -force
                
                If(!(test-path "$(logWriteDirectory)"))
                {
                    Write-Host "$(logWriteDirectory) folder does not exists."
                    New-Item -ItemType Directory -Force -Path "$(logWriteDirectory)"
                    Write-Host "$(logWriteDirectory) folder created."
                }
                
                Import-CrmDataFile -CrmConnection "$(ConnectionStringACCDATA)" -Datafile "$(Agent.BuildDirectory)\PackedData.$(currentDate)\$(dataFileName)" -Verbose -LogWriteDirectory "$(logWriteDirectory)"
              warningPreference: 'stop'
              failOnStderr: true
              showWarnings: true
              
          - task: PowerShell@2
            name: "Print_Logs"
            condition: always()
            inputs:
              targetType: 'inline'
              script: |
                cd $(Build.SourcesDirectory)/ConfigurationMigration/Logs/import
                cat *


- stage: Deploy_MasterData_to_PREPROD
  dependsOn: Stage_Pack_Data_and_Publish_Artifact
  pool:
      vmImage: 'windows-latest'
  jobs:
  - deployment: Deploy
    displayName: Deploy_MasterData_to_PREPROD
    environment: PREPROD-TDG
    cancelTimeoutInMinutes: 2
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: none

          - task: DownloadBuildArtifacts@1
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'PackedData.$(currentDate)'
              downloadPath: '$(System.ArtifactsDirectory)'

          - task: PowerShell@2
            name: "Import_Data_PREPROD"
            inputs:
              targetType: 'inline'
              script: |
                Install-Module -Name Microsoft.Xrm.Tooling.ConfigurationMigration -force
                
                If(!(test-path "$(logWriteDirectory)"))
                {
                    Write-Host "$(logWriteDirectory) folder does not exists."
                    New-Item -ItemType Directory -Force -Path "$(logWriteDirectory)"
                    Write-Host "$(logWriteDirectory) folder created."
                }
                
                Import-CrmDataFile -CrmConnection "$(ConnectionStringPREPROD)" -Datafile "$(System.ArtifactsDirectory)\PackedData.$(currentDate)\$(dataFileName)" -Verbose -LogWriteDirectory "$(logWriteDirectory)"
              warningPreference: 'stop'
              failOnStderr: true
              showWarnings: true
              
          - task: PowerShell@2
            name: "Print_Logs"
            condition: always()
            inputs:
              targetType: 'inline'
              script: |
                cd $(Build.SourcesDirectory)/ConfigurationMigration/Logs/import
                cat *
