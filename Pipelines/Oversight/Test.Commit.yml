# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pr:
- none

pool:
  vmImage: 'vs2017-win2016'

steps:
- checkout: self
  persistCredentials: true
  clean: false

- task: PowerPlatformToolInstaller@0
  inputs:
    DefaultVersion: true

- task: MSCRMToolInstaller@12
  inputs:
    nugetFeed: 'official'
    psFeed: 'official'

- task: PowerPlatformPublishCustomizations@0
  inputs:
     authenticationType: 'PowerPlatformSPN'
     PowerPlatformSPN: 'ROM Dev'

- task: MSCRMGetLatestPatch@12
  inputs:
    crmConnectionString: '$(ConnectionStringDev)'
    solutionName: 'TC_GlobalCore'
    existsVariableName: 'PatchExists'
    patchVariableName: 'LatestPatchName' 

- task: PowerPlatformExportSolution@0
  inputs:
    authenticationType: 'PowerPlatformSPN'
    PowerPlatformSPN: 'ROM Dev'
    SolutionName: '$(LatestPatchName)'
    SolutionOutputFile: '$(Build.ArtifactStagingDirectory)\$(LatestPatchName).zip'
    AsyncOperation: true
    MaxAsyncWaitTime: '60'
    ExportRelationshipRoles: true

- task: PowerPlatformExportSolution@0
  inputs:
    authenticationType: 'PowerPlatformSPN'
    PowerPlatformSPN: 'ROM Dev'
    SolutionName: '$(LatestPatchName)'
    SolutionOutputFile: '$(Build.ArtifactStagingDirectory)\Managed\$(LatestPatchName).zip'
    AsyncOperation: true
    MaxAsyncWaitTime: '60'
    ExportRelationshipRoles: true
    Managed: true

# - powershell: |
#    echo "Committing all CDS solution changes"
#    git config user.email "nepasrepondre-noreply@tc.gc.ca"
#    git config user.name "tc-buildbot"
#    git checkout development
#    git add --all
#    git commit -m "Update Solution - $env:SOLUTIONNAME: $env:COMMITMESSAGE"
   
#    echo "Push solution changes to the remote repository"
#    git -c http.extraheader="AUTHORIZATION: basic $(System.AccessToken)" push --force origin development

- task: PowerPlatformImportSolution@0
  inputs:
    authenticationType: 'PowerPlatformSPN'
    PowerPlatformSPN: 'ROM Test'
    SolutionInputFile: '$(Build.ArtifactStagingDirectory)\Managed\$(LatestPatchName).zip'
    AsyncOperation: true
    MaxAsyncWaitTime: '240'
    OverwriteUnmanagedCustomizations: true

- task: PowerPlatformPublishCustomizations@0
  inputs:
    authenticationType: 'PowerPlatformSPN'
    PowerPlatformSPN: 'ROM Test'

# - task: PublishPipelineArtifact@1
#   inputs:
#     targetPath: '$(Build.ArtifactStagingDirectory)\managed\$(LatestPatchName).zip'
#     artifact: 'drop_base'
#     publishLocation: 'pipeline'