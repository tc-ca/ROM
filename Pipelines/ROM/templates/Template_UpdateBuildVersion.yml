parameters:
  - name: StageName
    type: string
  - name: VersionMajor
    type: int
  - name: VersionMinor
    type: int
  - name: VersionPatch
    type: int
    default: 0
  - name: IncrementRevisionOrPatchNumber
    type: string
    default: 'Revision'
  - name: dependsOn
    type: object
    default: []
    
stages:
- stage: ${{Parameters.StageName}}
  dependsOn:
  - ${{ each stage in parameters.dependsOn }}:
    - ${{ stage }}
  pool:
      vmImage: 'windows-latest'
  jobs:
  
  #Revision Versioning
  - job: ${{Parameters.StageName}}_Revision
    condition: eq(${{Parameters.IncrementRevisionOrPatchNumber}}, 'Revision')
    variables:
      -name: VersionRevision
       value: $[counter(${{Parameters.VersionMajor}}${{Parameters.VersionMinor}}${{Parameters.VersionPatch}}, 0)]
    steps:
      - task: PowerShell@2
        displayName: Set the name of the build by Revision (i.e. the Build.BuildNumber)
        inputs:
          targetType: 'inline'
          script: |
            [string] $buildName = "$(VersionMajor).$(VersionMinor).$(VersionPatch).$(VersionRevision)"
            Write-Host "Setting the name of the build to '$buildName'."
            Write-Host "##vso[build.updatebuildnumber]$buildName"

  #Patch Versioning            
  - job: ${{Parameters.StageName}}_Patch
    condition: eq(${{Parameters.IncrementRevisionOrPatchNumber}}, 'Patch')
    variables:
      - name: VersionPatch
        value: $[counter(${{Parameters.VersionMajor}}${{Parameters.VersionMinor}}, 0)]
    steps:
      - task: PowerShell@2
        displayName: Set the name of the build by Patch (i.e. the Build.BuildNumber)
        inputs:
          targetType: 'inline'
          script: |
            [string] $buildName = "$(VersionMajor).$(VersionMinor).$(VersionPatch).0"
            Write-Host "Setting the name of the build to '$buildName'."
            Write-Host "##vso[build.updatebuildnumber]$buildName"