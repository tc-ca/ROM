resources:
  repositories:
  - repository: self
    type: git
    ref: development

parameters:
  SolutionName: 'TC_GlobalCore'
  PowerPlatformSPN: ''
  
- stage: PackAndDeployToQA
  jobs:
  - deployment: Deploy
    timeoutInMinutes: 360 # how long to run the job before automatically cancelling
    cancelTimeoutInMinutes: 2 # how much time to give 'run always even if cancelled tasks' before stopping them
    pool:
      vmImage: 'windows-latest'
    environment: QA
    strategy:
      runOnce:
        deploy:
          steps:
          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "============================================"
                Write-Host "Echoing Parameter Values"
                Write-Host "Parameters.SolutionName: ${{Parameters.SolutionName}}"
                Write-Host "Parameters.PowerPlatformSPN: ${{Parameters.PowerPlatformSPN}}"
                Write-Host "============================================"
          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "============================================"
                Write-Host "System.DefaultWorkingDirectory"
                Get-ChildItem -Path "$(System.DefaultWorkingDirectory)"
                Write-Host "============================================"
                Write-Host "Agent.BuildDirectory"
                Get-ChildItem -Path "$(Agent.BuildDirectory)"
                Write-Host "============================================"
                Write-Host ""
                Write-Host "============================================"
                Write-Host "Build.ArtifactStagingDirectory"
                Get-ChildItem -Path "$(Build.ArtifactStagingDirectory)"
                Write-Host "============================================"
                Write-Host "============================================"
                Write-Host "Build.BinariesDirectory"
                Get-ChildItem -Path "$(Build.BinariesDirectory)"
                Write-Host "============================================"
                Write-Host "============================================"
                Write-Host "Build.SourcesDirectory"
                Get-ChildItem -Path "$(Build.SourcesDirectory)"
                Write-Host "============================================"
              errorActionPreference: 'continue'
         - task: PowerPlatformToolInstaller@0
           inputs:
             DefaultVersion: true
         - task: PowerPlatformImportSolution@0
           inputs:
             authenticationType: 'PowerPlatformSPN'
             PowerPlatformSPN: '${{Parameters.PowerPlatformSPN}}'
             SolutionInputFile: 'zip\${{Parameters.SolutionName}}_Managed.zip'
             AsyncOperation: true
             MaxAsyncWaitTime: '360'
             HoldingSolution: true
             OverwriteUnmanagedCustomizations: true
             ConvertToManaged: true
         - task: PowerPlatformApplySolutionUpgrade@0
           inputs:
             authenticationType: 'PowerPlatformSPN'
             PowerPlatformSPN: '${{Parameters.PowerPlatformSPN}}'
             SolutionName: '${{Parameters.SolutionName}}'
             AsyncOperation: true
             MaxAsyncWaitTime: '360'