trigger:
- none

pr:
- none

stages:
- stage: BuildAndPublishArtifact
  pool:
      vmImage: 'vs2017-win2016'
  jobs:
  - job: BuildAndPublishArtifact
    steps:
    - task: MSCRMToolInstaller@12
      inputs:
        nugetFeed: 'official'
        psFeed: 'official'
    - task: MSCRMGetLatestPatch@12
      name: GetLatestPatchTask
      inputs:
        crmConnectionString: '$(ConnectionStringDev)'
        solutionName: '$(CoreSolutionName)'
        existsVariableName: 'PatchExists'
        patchVariableName: 'LatestPatchName'
    - powershell: |
        Write-Host "##vso[task.setvariable variable=task.GetLatestPatchTask.PatchExists]$(PatchExists)"
        Write-Host "##vso[task.setvariable variable=task.GetLatestPatchTask.LatestPatchName]$(LatestPatchName)"
        Write-Host "Patch Exists =  $(PatchExists)"
        Write-Host "Latest Patch Name =  $(LatestPatchName)"
        Write-Host "${{ eq('$(PatchExists)', 'False') }}"
        Write-Host variables['task.GetLatestPatchTask.PatchExists']
    - task: MSCRMExportSolution@12
      inputs:
        crmConnectionString: '$(ConnectionStringDev)'
        solutionName: '$(LatestPatchName)'
        exportManaged: true
        exportUnmanaged: true
        includeVersionInSolutionFile: true
        outputPath: '$(Build.ArtifactStagingDirectory)'
        crmConnectionTimeout: '1960'