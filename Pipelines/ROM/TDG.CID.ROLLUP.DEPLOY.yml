trigger:
- none

pr:
- none

#variable 'Pipeline_ConnectionStringDev' defined in devops

variables:
  - name: PowerPlatformSPN_Dev
    value: 'TDG CORE DEV'
  - name: PowerPlatformSPN_QA
    value: 'TDG CORE QA'
  - name: PowerPlatformSPN_ACC
    value: 'ROM ACC TDG'
  - name: PowerPlatformSPN_ACCDATA
    value: 'ROM ACC TDG DATA'
  - name: PowerPlatformSPN_PREPROD
    value: 'ROM PREPROD TDG'
  - name: PowerPlatformSPN_PROD
    value: 'ROM PROD TDG'
  - name: SolutionName
    value: 'TC_GlobalCore'

name: 'Release Pipeline'

stages:
- stage: PrintPipelineVariables
  pool:
      vmImage: 'windows-latest'
  jobs:
  - job: PrintPipelineVariables
    steps:
    - checkout: self
      persistCredentials: true
      clean: true
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          Write-Host "============================================"
          Write-Host "Echoing *Variable* Values"
          Write-Host "SolutionName:               $(SolutionName)"
          Write-Host "PowerPlatformSPN_Dev:       $(PowerPlatformSPN_Dev)"
          Write-Host "PowerPlatformSPN_QA:        $(PowerPlatformSPN_QA)"
          Write-Host "PowerPlatformSPN_ACC:       $(PowerPlatformSPN_ACC)"
          Write-Host "PowerPlatformSPN_ACCDATA:   $(PowerPlatformSPN_ACCDATA)"
          Write-Host "PowerPlatformSPN_PREPROD:   $(PowerPlatformSPN_PREPROD)"
          Write-Host "PowerPlatformSPN_PROD:      $(PowerPlatformSPN_PROD)"
          Write-Host "============================================"
- template: templates/stage/RollupSolution.yml  # Template reference
  parameters:
    SolutionName: $(SolutionName)
    ConnectionString: $(Pipeline_ConnectionStringDev)
    StageName: 'RollupSolutionOnDev'
- template: templates/stage/CommitSolution.yml  # Template reference
  parameters:
    SolutionName: $(SolutionName)
    PowerPlatformSPN: $(PowerPlatformSPN_Dev)
    StageName: 'BuildAndPublishArtifacts'
    dependsOn: 
    - 'RollupSolutionOnDev'
- template: templates/stage/PatchSolution.yml  # Template reference
  parameters:
    SolutionName: $(SolutionName)
    ConnectionString: $(Pipeline_ConnectionStringDev)
    StageName: 'CreatePatchOnDev'
    dependsOn: 
    - 'BuildAndPublishArtifacts'

# - template: templates/stage/DeployHoldingSolution.yml  # Template reference
#   parameters:
#     SolutionName: $(SolutionName)
#     PowerPlatformSPN: $(PowerPlatformSPN_QA)
#     Environment: 'QA-TDG'
#     StageName: 'DeployManagedSolutionToQA'
#     dependsOn: 
#     - 'BuildAndPublishArtifacts'

- stage: ImportSolutionToQA
  pool:
      vmImage: 'windows-latest'
  jobs:
  - deployment: Deploy
    displayName:  ImportSolutionToQA
    environment: QA-TDG
    timeoutInMinutes: 9999
    cancelTimeoutInMinutes: 2
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: none
            persistCredentials: true
          - task: DownloadBuildArtifacts@1
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'zip'
              downloadPath: '$(Agent.BuildDirectory)'
          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "============================================"
                Write-Host "Agent.BuildDirectory"
                Get-ChildItem -Path "$(Agent.BuildDirectory)"
                Write-Host "============================================"
                Write-Host ""
                Write-Host "============================================"
                Write-Host "Agent.BuildDirectory/zip"
                Get-ChildItem -Path "$(Agent.BuildDirectory)/zip"
                Write-Host "============================================"
              errorActionPreference: 'continue'
          - task: PowerPlatformToolInstaller@0
            inputs:
              DefaultVersion: true
          - task: PowerPlatformImportSolution@0
            inputs:
              authenticationType: 'PowerPlatformSPN'
              PowerPlatformSPN: '$(PowerPlatformSPN_QA)'
              SolutionInputFile: '$(Agent.BuildDirectory)\zip\$(SolutionName)_Managed.zip'
              AsyncOperation: true
              MaxAsyncWaitTime: '9999'
              HoldingSolution: true
              OverwriteUnmanagedCustomizations: false

- stage: ApplySolutionUpgradeQA
  dependsOn:
    - 'ImportSolutionToQA'
  pool:
      vmImage: 'windows-latest'
  jobs:
  - job: ApplySolutionUpgradeQA
    timeoutInMinutes: 0
    steps:
    - checkout: none
      persistCredentials: true
      clean: true
    - task: PowerPlatformToolInstaller@0
      inputs:
        DefaultVersion: true
    - task: PowerPlatformApplySolutionUpgrade@0
      continueOnError: true
      inputs:
        authenticationType: 'PowerPlatformSPN'
        PowerPlatformSPN: '$(PowerPlatformSPN_QA)'
        SolutionName: '$(SolutionName)'
        AsyncOperation: true
        MaxAsyncWaitTime: '9999'

#deploy to acc-data as unmanaged solution
# - template: templates/stage/DeploySolution.yml  # Template reference
#   parameters:
#     SolutionName: $(SolutionName)
#     PowerPlatformSPN: $(PowerPlatformSPN_ACCDATA)
#     Environment: 'ACC-TDG-DATA'
#     StageName: 'DeployManagedSolutionToACCDATA'
#     DeployUnmanagedSolution: true
#     dependsOn: 
#     - 'DeployManagedSolutionToQA'

- stage: ImportSolutionToACC
  dependsOn:
    - 'ApplySolutionUpgradeQA'
  pool:
      vmImage: 'windows-latest'
  jobs:
  - deployment: Deploy
    displayName:  ImportSolutionToACC
    environment: ACC-TDG
    timeoutInMinutes: 9999
    cancelTimeoutInMinutes: 2
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: none
            persistCredentials: true
            clean: true
          - task: DownloadBuildArtifacts@1
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'zip'
              downloadPath: '$(Agent.BuildDirectory)'
          - task: PowerPlatformToolInstaller@0
            inputs:
              DefaultVersion: true
          - task: PowerPlatformImportSolution@0
            inputs:
              authenticationType: 'PowerPlatformSPN'
              PowerPlatformSPN: '$(PowerPlatformSPN_ACC)'
              SolutionInputFile: '$(Agent.BuildDirectory)\zip\$(SolutionName)_Managed.zip'
              AsyncOperation: true
              MaxAsyncWaitTime: '9999'
              HoldingSolution: true
              OverwriteUnmanagedCustomizations: false

- stage: ApplySolutionUpgradeACC
  dependsOn:
    - 'ImportSolutionToACC'
  pool:
      vmImage: 'windows-latest'
  jobs:
  - job: ApplySolutionUpgradeACC
    continueOnError: true
    timeoutInMinutes: 0
    steps:
    - checkout: none
      persistCredentials: true
      clean: true
    - task: PowerPlatformToolInstaller@0
      inputs:
        DefaultVersion: true
    - task: PowerPlatformApplySolutionUpgrade@0
      inputs:
        authenticationType: 'PowerPlatformSPN'
        PowerPlatformSPN: '$(PowerPlatformSPN_ACC)'
        SolutionName: '$(SolutionName)'
        AsyncOperation: true
        MaxAsyncWaitTime: '9999'

# - template: templates/stage/DeployHoldingSolution.yml  # Template reference
#   parameters:
#     SolutionName: $(SolutionName)
#     PowerPlatformSPN: $(PowerPlatformSPN_ACC)
#     Environment: 'ACC-TDG'
#     StageName: 'DeployManagedSolutionToACC'
#     dependsOn: 
#     - 'DeployManagedSolutionToQA'

# - template: templates/stage/DeployHoldingSolution.yml  # Template reference
#   parameters:
#     SolutionName: $(SolutionName)
#     PowerPlatformSPN: $(PowerPlatformSPN_PREPROD)
#     Environment: 'PREPROD-TDG'
#     StageName: 'DeployManagedSolutionToPREPROD'
#     dependsOn: 
#     - 'DeployManagedSolutionToQA'

- stage: ImportSolutionToPREPROD
  dependsOn:
    - 'ApplySolutionUpgradeQA'
  pool:
      vmImage: 'windows-latest'
  jobs:
  - deployment: Deploy
    displayName:  ImportSolutionToPREPROD
    environment: PREPROD-TDG
    timeoutInMinutes: 9999
    cancelTimeoutInMinutes: 2
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: none
            persistCredentials: true
            clean: true
          - task: DownloadBuildArtifacts@1
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'zip'
              downloadPath: '$(Agent.BuildDirectory)'
          - task: PowerPlatformToolInstaller@0
            inputs:
              DefaultVersion: true
          - task: PowerPlatformImportSolution@0
            inputs:
              authenticationType: 'PowerPlatformSPN'
              PowerPlatformSPN: '$(PowerPlatformSPN_PREPROD)'
              SolutionInputFile: '$(Agent.BuildDirectory)\zip\$(SolutionName)_Managed.zip'
              AsyncOperation: true
              MaxAsyncWaitTime: '9999'
              HoldingSolution: true
              OverwriteUnmanagedCustomizations: false

- stage: ApplySolutionUpgradePREPROD
  dependsOn:
    - 'ImportSolutionToPREPROD'
  pool:
      vmImage: 'windows-latest'
  jobs:
  - job: ApplySolutionUpgradePREPROD
    continueOnError: true
    timeoutInMinutes: 0
    steps:
    - checkout: none
      persistCredentials: true
      clean: true
    - task: PowerPlatformToolInstaller@0
      inputs:
        DefaultVersion: true
    - task: PowerPlatformApplySolutionUpgrade@0
      inputs:
        authenticationType: 'PowerPlatformSPN'
        PowerPlatformSPN: '$(PowerPlatformSPN_PREPROD)'
        SolutionName: '$(SolutionName)'
        AsyncOperation: true
        MaxAsyncWaitTime: '9999'

# - template: templates/stage/DeployHoldingSolution.yml  # Template reference
#   parameters:
#     SolutionName: $(SolutionName)
#     PowerPlatformSPN: $(PowerPlatformSPN_PROD)
#     Environment: 'PROD-TDG'
#     StageName: 'DeployManagedSolutionToPROD'
#     dependsOn: 
#     - 'DeployManagedSolutionToQA'

- stage: ImportSolutionToPROD
  dependsOn:
    - 'ApplySolutionUpgradeQA'
  pool:
      vmImage: 'windows-latest'
  jobs:
  - deployment: Deploy
    displayName:  ImportSolutionToPROD
    environment: PROD-TDG
    timeoutInMinutes: 9999
    cancelTimeoutInMinutes: 2
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: none
            persistCredentials: true
            clean: true
          - task: DownloadBuildArtifacts@1
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'zip'
              downloadPath: '$(Agent.BuildDirectory)'
          - task: PowerPlatformToolInstaller@0
            inputs:
              DefaultVersion: true
          - task: PowerPlatformImportSolution@0
            inputs:
              authenticationType: 'PowerPlatformSPN'
              PowerPlatformSPN: '$(PowerPlatformSPN_PROD)'
              SolutionInputFile: '$(Agent.BuildDirectory)\zip\$(SolutionName)_Managed.zip'
              AsyncOperation: true
              MaxAsyncWaitTime: '9999'
              HoldingSolution: true
              OverwriteUnmanagedCustomizations: false

- stage: ApplySolutionUpgradePROD
  dependsOn:
    - 'ImportSolutionToPROD'
  pool:
      vmImage: 'windows-latest'
  jobs:
  - job: ApplySolutionUpgradePROD
    continueOnError: true
    timeoutInMinutes: 0
    steps:
    - checkout: none
      persistCredentials: true
      clean: true
    - task: PowerPlatformToolInstaller@0
      inputs:
        DefaultVersion: true
    - task: PowerPlatformApplySolutionUpgrade@0
      inputs:
        authenticationType: 'PowerPlatformSPN'
        PowerPlatformSPN: '$(PowerPlatformSPN_PROD)'
        SolutionName: '$(SolutionName)'
        AsyncOperation: true
        MaxAsyncWaitTime: '9999'