trigger:
- none

pool:
  vmImage: windows-latest

steps:
- task: MSCRMToolInstaller@12
  inputs:
    nugetFeed: 'official'
    psFeed: 'official'
- powershell: |
    If(!(test-path '$(Build.SourcesDirectory)\ConfigurationMigration\Logs\Export'))
    {
      Write-Host "$(Build.SourcesDirectory)\ConfigurationMigration\Logs\Export folder does not exists."
      New-Item -ItemType Directory -Force -Path '$(Build.SourcesDirectory)\ConfigurationMigration\Logs\Export'
      Write-Host "$(Build.SourcesDirectory)\ConfigurationMigration\Logs\Export folder created."
    }
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      Install-Module -Name Microsoft.Xrm.Tooling.ConfigurationMigration -force
      Export-CrmDataFile -SchemaFile "$(Build.SourcesDirectory)/ConfigurationMigration/schema/ReferenceDataMigration-CostRecoveryAttributes.xml" -DataFile  "$(Build.SourcesDirectory)/ConfigurationMigration/data/ReferenceDataMigration-CostRecoveryAttributes.zip" -CrmConnection "$(ConnectionStringDev)" -Verbose

# - task: MSCRMExportCMData@12
#   continueOnError: true
#   inputs:
#     crmConnectionString: '$(ConnectionStringDev)'
#     schemaFile: '$(Build.SourcesDirectory)/ConfigurationMigration/schema/ReferenceDataMigration-CostRecoveryAttributes.xml'
#     #dataFile: $(Build.SourcesDirectory)/ConfigurationMigration/data/ReferenceDataMigration-CostRecoveryAttributes.zip'
#     crmConnectionTimeout: '999'
#     logsDirectory: '$(Build.SourcesDirectory)/ConfigurationMigration/Logs/Export'
# - task: MSCRMExtractCMData@12
#   continueOnError: true
#   inputs:
#     dataFile: '../../../ConfigurationMigration/data/ReferenceDataMigration-CostRecoveryAttributes.zip'
#     extractFolder: '../../../ConfigurationMigration/data/unpacked'
#     sortExtractedData: true
#     splitExtractedData: true
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      cd $(Build.SourcesDirectory)/ConfigurationMigration/Logs/Export
      cat *
