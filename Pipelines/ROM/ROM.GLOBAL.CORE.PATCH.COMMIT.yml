# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml


trigger:
  - none

pool:
  vmImage:  'vs2017-win2016'

steps:
- checkout: self
  persistCredentials: true
  clean: true
- task: PowerPlatformToolInstaller@0
  inputs:
    DefaultVersion: true
- task: PowerPlatformPublishCustomizations@0
  inputs:
    authenticationType: 'PowerPlatformSPN'
    PowerPlatformSPN: 'ROM Dev'
- task: MSCRMGetLatestPatch@12
  inputs:
    crmConnectionString: '$(ConnectionDev)'
    solutionName: '$(SolutionName)'
    patchVariableName: '$(LatestPatchName)'
- task: PowerPlatformExportSolution@0
  inputs:
    authenticationType: 'PowerPlatformSPN'
    PowerPlatformSPN: 'ROM Dev'
    SolutionName: '$(LatestPatchName)'
    SolutionOutputFile: '$(Build.ArtifactStagingDirectory)\$(LatestPatchName).zip'
    AsyncOperation: true
    MaxAsyncWaitTime: '60'
    ExportRelationshipRoles: true
    Managed: false
- task: PowerPlatformUnpackSolution@0
  inputs:
    SolutionInputFile: '$(Build.ArtifactStagingDirectory)\$(SolutionName).zip'
    SolutionTargetFolder: '$(Build.SourcesDirectory)\$(SolutionName)'
- powershell: |
    echo "Committing TC GlobalCore solution changes"
    git config user.email "nepasrepondre-noreply@tc.gc.ca"
    git config user.name "tc-buildbot"
    git checkout development
    git add --all
    git commit -m "Update Solution - $env:SOLUTIONNAME: $env:COMMITMESSAGE"
    Write-Host "Push solution changes to the remote repository"
    git -c http.extraheader="AUTHORIZATION: basic $(System.AccessToken)" push --force origin development