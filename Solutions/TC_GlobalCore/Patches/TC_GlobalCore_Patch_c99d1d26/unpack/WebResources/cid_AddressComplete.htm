<HTML>
<HEAD>
    <TITLE></TITLE>
    <style>
        body {
            background-color: white;
            display: block;
            margin-left: 0px;
            margin-right: 0px;
        }

        text {
            font-family: Helvetica, Arial, sans-serif;
            font-size: 16px;
            padding: 6px 12px;
        }

        label {
            font-family: Helvetica, Arial, sans-serif;
            font-size: 16px;
            margin: 0px 0px 5px;
            font-weight: bold;
        }

        .form-control {
            display: block;
            font-size: 16px;
            line-height: 1.4375;
            color: #555;
            border: 1px solid #949494;
            border-radius: 4px;
            box-shadow: inset 0 1px 1px rgb(0 0 0 / 8%);
            transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s,-webkit-box-shadow ease-in-out .15s;
            font-family: "Noto Sans",sans-serif;
            padding: 6px 12px;
            height: auto;
            max-width: 100%;
            min-height: 37px;
            background-image: none;
            margin-top: 7px;
            width: 100%;
        }
    </style>
    <!-- Using jquery library -->
    <script src="https://code.jquery.com/jquery-3.6.0.js" integrity="sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk=" crossorigin="anonymous"></script>
</HEAD>
<BODY>
    <script type="text/javascript">
        function search() {
            //debugger;
            var address1_line1 = document.getElementById("address1_line1").value
            var SearchTerm = address1_line1;
            var LanguagePreference = 'en';

            AddressComplete.Find(SearchTerm, LanguagePreference);
        }

        function onInput(e) {
            //debugger;

            var input = e.target;
            var val = input.value;
            var list = input.getAttribute('list');
            var options = document.getElementById(list).childNodes;
            var found = false;
            var index = 0;

            // address1_line1
            var address1_line1 = document.getElementById('address1_line1').value;
            sessionStorage.setItem("Line1", address1_line1);
            try {
                // transfer control back to parent form
                parent.AddressComplete_address1_line1();
            } catch (e) { }


            // skip 1st option
            for (var i = 1; i < options.length; i++) {
                var current = options[i].value;
                if (current === val) {
                    found = true;
                    index = i;
                    break;
                }
            }

            if (found) {
                debugger;
                var id = AddressComplete.GetId(index - 1);
                var list = id.split(";");
                if (list[1] == "Retrieve") {
                    AddressComplete.Retrieve(list[0]);
                }
                else {
                    var LanguagePreference = 'en';
                    var LastId = list[0];

                    AddressComplete.Find_LastId(LastId, LanguagePreference);
                }
            }
            else {
                search();
            }
        }
    </script>

    <label for="address1_line1" class="field-label">Street 1</label>
    <span id="address1_line1_required" style="color: red;font-weight: bold"> *</span>
    <br>
    <input list="address_list" id="address1_line1" class="text form-control" />
    <br>
    <datalist id="address_list">
        <option value="" />
        <option value="" />
        <option value="" />
        <option value="" />
        <option value="" />
        <option value="" />
        <option value="" />
    </datalist>
    <datalist id="address_list_lastid">
        <option value="Edge">
        <option value="Firefox">
        <option value="Chrome">
        <option value="Opera">
        <option value="Safari">
        <option value="iPhone" />
        <option value="iPad" />
    </datalist>    
    <input type="text" id="address_list_id" hidden />
    <input type="text" id="address_list_next" hidden />

    <script type="text/javascript">
        $(document).ready(function () {
            debugger;
            document.querySelector('input[list="address_list"]').addEventListener('input', onInput);
            AddressComplete.removeOptions('address_list', false);

            var address1_line1 = sessionStorage.getItem("AddressLine1Text");
            address1_line1 = (address1_line1 == "null" ? "" : address1_line1);
            document.getElementById('address1_line1').value = address1_line1;

            // AddressComplete_Hide_address1_line1
            parent.AddressComplete_Hide_address1_line1();
        })

    </script>

    <script>
        var AddressComplete = {
            _Key: "MM95-DM44-MP35-XM79",
            _MaxResults: 7,
            _MaxSuggestions: 7,
            _SearchFor: 'Everything',

            GetId: function (index) {
                //debugger;
                var address_list_id = document.getElementById('address_list_id').value;
                var address_list_next = document.getElementById('address_list_next').value;
                var list = address_list_id.split(";");
                var next_list = address_list_next.split(";");
                var value = list[index] + ";" + next_list[index];

                return value;
            },

            Find: function (SearchTerm, LanguagePreference) {
                //debugger;

                this.removeOptions('address_list', false);
                document.getElementById('address_list_id').value = "";

                //var LastId = '';
                var Country = '';
                var url = 'https://ws1.postescanada-canadapost.ca/AddressComplete/Interactive/Find/v2.10/json3.ws';

                var params = '';
                params += "&Key=" + encodeURIComponent(this._Key);
                params += "&SearchTerm=" + encodeURIComponent(SearchTerm);
                params += "&SearchFor=" + encodeURIComponent(this._SearchFor);
                params += "&Country=" + encodeURIComponent(Country);
                params += "&LanguagePreference=" + encodeURIComponent(LanguagePreference);
                params += "&MaxSuggestions=" + encodeURIComponent(this._MaxSuggestions);
                params += "&MaxResults=" + encodeURIComponent(this._MaxResults);

                var http = new XMLHttpRequest();
                http.open('POST', url, true);
                http.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
                http.onreadystatechange = function () {
                    if (http.readyState == 4 && http.status == 200) {
                        var response = JSON.parse(http.responseText);

                        // Test for an error
                        if (response.Items.length == 1 && typeof (response.Items[0].Error) != "undefined") {
                            // Show the error message
                            // alert(response.Items[0].Description);
                        }
                        else {
                            // Check if there were any items found
                            if (response.Items.length == 0) {
                                //alert("Sorry, there were no results");
                            }
                            else {
                                //debugger;
                                var items = response.Items;
                                var address_list = document.getElementById('address_list');
                                var address_list_id = "";
                                var address_list_next = "";

                                this._Items = [];

                                if (items.length > 7) {
                                    debugger;
                                }
                                var max = (items.length > 7 ? 7 : items.length);
                                for (i = 0; i < max; i++) {
                                    var item = items[i];
                                    var value = item.Id;
                                    var next = item.Next;
                                    var text = item.Text + ', ' + item.Description;

                                    address_list.options[i].value = text;
                                    address_list_id += value + ";";
                                    address_list_next += next + ";";
                                    //address_list_id.add(new Option(text, value));
                                }
                                document.getElementById('address_list_id').value = address_list_id;
                                document.getElementById('address_list_next').value = address_list_next;
                            }
                        }
                    }
                }

                try {
                    http.send(params);
                } catch (e) {
                    debugger;
                }
            },

            Find_LastId: function (LastId, LanguagePreference) {
                //debugger;

                this.removeOptions('address_list', false);
                document.getElementById('address_list_id').value = "";

                //var LastId = '';
                var Country = '';
                var url = 'https://ws1.postescanada-canadapost.ca/AddressComplete/Interactive/Find/v2.10/json3.ws';

                var params = '';
                params += "&Key=" + encodeURIComponent(this._Key);
                params += "&LastId=" + encodeURIComponent(LastId);
                params += "&SearchFor=" + encodeURIComponent(this._SearchFor);
                params += "&Country=" + encodeURIComponent(Country);
                params += "&LanguagePreference=" + encodeURIComponent(LanguagePreference);
                params += "&MaxSuggestions=" + encodeURIComponent(this._MaxSuggestions);
                params += "&MaxResults=" + encodeURIComponent(this._MaxResults);

                var http = new XMLHttpRequest();
                http.open('POST', url, true);
                http.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
                http.onreadystatechange = function () {
                    if (http.readyState == 4 && http.status == 200) {
                        var response = JSON.parse(http.responseText);

                        // Test for an error
                        if (response.Items.length == 1 && typeof (response.Items[0].Error) != "undefined") {
                            // Show the error message
                            // alert(response.Items[0].Description);
                        }
                        else {
                            // Check if there were any items found
                            if (response.Items.length == 0) {
                                //alert("Sorry, there were no results");
                            }
                            else {
                                //debugger;
                                var items = response.Items;
                                var address_list = document.getElementById('address_list_lastid');
                                var address_list_id = "";
                                var address_list_next = "";

                                this._Items = [];

                                if (items.length > 7) {
                                    debugger;
                                }
                                var max = (items.length > 7 ? 7 : items.length);
                                for (i = 0; i < max; i++) {
                                    var item = items[i];
                                    var value = item.Id;
                                    var next = item.Next;
                                    var text = item.Text + ', ' + item.Description;

                                    address_list.options[i].value = text;
                                    address_list_id += value + ";";
                                    address_list_next += next + ";";
                                    //address_list_id.add(new Option(text, value));
                                }
                                document.getElementById('address_list_id').value = address_list_id;
                                document.getElementById('address_list_next').value = address_list_next;
                            }
                        }
                    }
                }

                try {
                    http.send(params);
                } catch (e) {
                    debugger;
                }
            },

            Retrieve: function (Id) {
                debugger;

                var url = 'https://ws1.postescanada-canadapost.ca/AddressComplete/Interactive/Retrieve/v2.11/json3.ws';
                var params = '';
                params += "&Key=" + encodeURIComponent(this._Key);
                params += "&Id=" + encodeURIComponent(Id);

                var http = new XMLHttpRequest();
                http.open('POST', url, true);
                http.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
                http.onreadystatechange = function () {
                    if (http.readyState == 4 && http.status == 200) {
                        var response = JSON.parse(http.responseText);
                        // Test for an error
                        if (response.Items.length == 1 && typeof (response.Items[0].Error) != "undefined") {
                            // Show the error message
                            // alert(response.Items[0].Description);
                        }
                        else {
                            // Check if there were any items found
                            if (response.Items.length == 0) {
                                // alert("Sorry, there were no results");
                            }
                            else {
                                //debugger;
                                AddressComplete.Selected(response.Items);
                            }
                        }
                    }
                }
                http.send(params);
            },

            removeOptions: function (name, option_ind) {
                //debugger;

                var selectElement = document.getElementById(name);
                for (var i = selectElement.options.length - 1; i >= 0; i--) {
                    if (option_ind) {
                        selectElement.remove(i);
                    }
                    else {
                        selectElement.options[i].value = "";
                    }
                }
            },

            getItem: function (field) {
                return sessionStorage.getItem(field);
            },

            Selected: function (data) {
                debugger;

                var item_e = data[0]; // english

                sessionStorage.setItem("POBoxNumber", item_e.POBoxNumber);
                sessionStorage.setItem("Line1", item_e.Line1);
                sessionStorage.setItem("Line2", item_e.Line2);
                sessionStorage.setItem("Line3", item_e.Line3);
                sessionStorage.setItem("City", item_e.City);
                sessionStorage.setItem("ProvinceName", item_e.ProvinceName);
                sessionStorage.setItem("PostalCode", item_e.PostalCode);
                sessionStorage.setItem("CountryName", item_e.CountryName);
                sessionStorage.setItem("Label", item_e.Label);

                try {
                    // transfer control back to parent form
                    //window.parent.Xrm.Page.AddressComplete_Selected;
                    //var value = parent.Xrm.Utility.AddressComplete_Selected();
                    parent.AddressComplete_Selected();

                    // set address1
                    document.getElementById('address1_line1').value = item_e.Line1;
                } catch (e) { }
            }
        }
    </script>
</BODY>
</HTML>
