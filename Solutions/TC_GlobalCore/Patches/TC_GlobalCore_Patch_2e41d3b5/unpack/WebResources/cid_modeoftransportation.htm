<HTML>
<HEAD>
    <TITLE></TITLE>
    <style>
        body {
            background-color: white;
            display: block;
            margin-left: 0px;
            margin-right: 0px;
        }

        text {
            font-family: Helvetica, Arial, sans-serif;
            font-size: 16px;
            padding: 6px 12px;
        }

        label {
            font-family: Helvetica, Arial, sans-serif;
            font-size: 16px;
            margin: 0px 0px 5px;
            font-weight: bold;
        }

        .form-control {
            display: block;
            font-size: 16px;
            line-height: 1.4375;
            color: #555;
            border: 1px solid #949494;
            border-radius: 4px;
            box-shadow: inset 0 1px 1px rgb(0 0 0 / 8%);
            transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s,-webkit-box-shadow ease-in-out .15s;
            font-family: "Noto Sans",sans-serif;
            padding: 6px 12px;
            height: auto;
            max-width: 100%;
            min-height: 37px;
            background-image: none;
            margin-top: 7px;
            width: 100%;
        }
    </style>
    <!-- Using jquery library -->
    <script src="https://code.jquery.com/jquery-3.6.0.js" integrity="sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk=" crossorigin="anonymous"></script>
</HEAD>
<BODY>
    <script type="text/javascript">
        function update() {
            debugger;
            alert("update!!!");

            //web_api_demo();
        }

        function web_api_demo(cid_site, cid_mode) {
            var data = {
                "cid_site@odata.bind": "/accounts(" + cid_site + ")",
                "cid_mode@odata.bind": "/ovs_modess(" + cid_mode + ")",
            };

            create("cid_modeoftransportation", data);
        }

        function search() {
            debugger;

            var site_id = tdgcore.common.param_get(parent.window.location.href, "id");

            var modes = "";
            var filter = "";
            var items = tdgcore.common.OData_List("ovs_modes", filter);
            debugger;
            for (i = 0; i < items.length; i++) {
                var item = items[i];
                var value = item.ovs_modesid;
                var text = item.ovs_name;

                // create checkbox
                var linebreak = document.createElement("br");

                var id_name = "mode_" + i;
                var checkbox = document.createElement('input');
                checkbox.type = "checkbox";
                checkbox.id = id_name;
                checkbox.name = id_name;
                checkbox.value = value;
                checkbox.onchange = function () {
                    mode_onchange();
                };

                var label = document.createElement('label');
                var tn = document.createTextNode(" " + text);
                label.htmlFor = id_name;
                label.appendChild(tn);

                document.body.appendChild(checkbox);
                document.body.appendChild(label);
                document.body.appendChild(linebreak);

                var checked = cid_modeoftransportation_get(site_id, value);
                if (checked) {
                    $("#" + id_name).prop("checked", true);
                }
                modes += (checked ? "1" : "0");

                if (i == 0) {
                    //web_api_demo(site_id, value);
                }
            }
            sessionStorage.setItem("cid_modeoftransportation_modes", modes);
            $("#modes_original").val(modes);
            $("#modes").val(modes);
            $("#modes_length").val(items.length);
        }

        function cid_modeoftransportation_get(cid_site, cid_mode) {
            //debugger;

            var filter = "cid_site/Id eq guid'$cid_site()'  and cid_mode/Id eq guid'$cid_mode()'";
            filter = filter.replace("$cid_site()", cid_site);
            filter = filter.replace("$cid_mode()", cid_mode);

            var items = tdgcore.common.OData_List("cid_modeoftransportation", filter);
            return (items.length > 0 ? true : false);
        }

        function checkbox_index(cid_mode_id) {
            // $("#" + name).is(":checked")

            debugger;
            var length = $("#modes_length").val();
            for (i = 0; i < length; i++) {
                var name = "mode_" + i;
                var value = $("#" + name).val();
                if (cid_mode_id == value) {
                    $("#" + name).prop("checked", true);
                    break;
                }
            }
        }

        function mode_onchange() {
            debugger;
            var modes = "";
            var length = $("#modes_length").val();
            for (i = 0; i < length; i++) {
                var id_name = "mode_" + i;
                var value = $("#" + id_name).val();
                var checked = $("#" + id_name)[0].checked;
                checked = (checked ? "1" : "0");
                modes += checked;
            }
            sessionStorage.setItem("cid_modeoftransportation_modes", modes);
            $("#modes").val(modes);
        }

        function create(entity, data) {
            debugger;
            webapi.safeAjax({
                type: "POST",
                url: "/_api/" + entity,
                contentType: "application/json",
                data: data,
                success: function (res, status, xhr) {
                    debugger;
                    //print id of newly created table record
                    console.log("entityID: " + xhr.getResponseHeader("entityid"))
                }
            });
        }

    </script>

    <script type="text/javascript">
        $(document).ready(function () {
            //debugger;
            search();
        })
    </script>

    <input type="text" id="modes_length" hidden />
    <input type="text" id="modes_original" readonly hidden />
    <input type="text" id="modes" readonly hidden />

    <script>
        // tdgcore_common.js

        if (typeof (tdgcore) == "undefined") {
            tdgcore = {
                __namespace: true
            };
        }

        if (typeof (tdgcore.common) == "undefined") {
            tdgcore.common = {
                text_language: function (text, language) {
                    //var selected_language = '{{website.selected_language.code}}';
                    //sessionStorage.setItem("selected_language", selected_language);

                    var value = "";
                    var index1 = text.indexOf("::");
                    if (language == "en-US") {
                        value = text.substr(0, index1);
                    }
                    else {
                        value = text.substr(index1 + 2);
                    }
                    return value;
                },

                // setRequiredLevel("required");
                addValidator: function (fieldName, fieldLabel) {
                    if (typeof (Page_Validators) == 'undefined') return;

                    // Create new validator
                    $("#" + fieldName + "_label").parent().addClass("required");

                    var newValidator = document.createElement('span');
                    newValidator.style.display = "none";
                    newValidator.id = "RequiredFieldValidator" + fieldName;
                    newValidator.controltovalidate = "casetypecode";
                    newValidator.errormessage = "<a href='#" + fieldName + "_label'>" + fieldLabel + " is a mandatory field.</a>";
                    newValidator.validationGroup = "";
                    newValidator.initialvalue = "";
                    newValidator.evaluationfunction = function () {
                        var value = $("#" + fieldName).val();
                        if (value == null || value == "") {
                            return false;
                        } else {
                            return true;
                        }
                    };

                    // Add the new validator to the page validators array:
                    Page_Validators.push(newValidator);

                    // Wire-up the click event handler of the validation summary link
                    $("a[href='#" + fieldName + "_label']").on("click", function () { scrollToAndFocus(fieldName + '_label', fieldName); });
                },

                // setRequiredLevel("none");
                removeValidator: function (fieldName) {
                    $.each(Page_Validators, function (index, validator) {
                        if (validator.id == "RequiredFieldValidator" + fieldName) {
                            Page_Validators.splice(index, 1);
                        }
                    });

                    $("#" + fieldName + "_label").parent().removeClass("required");
                },

                // odata
                OData_List: function (entity, filter) {
                    var url = entity + "?$filter=" + filter;
                    var oDataUrl = "~/_odata/" + url;
                    //var oDataUrl = "https://rd-tdgcore-dev.powerappsportals.com/_odata/" + url;
                    var response = null;

                    $.ajax({
                        type: "GET",
                        url: oDataUrl,
                        dataType: "json",
                        async: false
                    }).done(function (json) {
                        response = json.value;
                    });
                    return response;
                },

                error_message: function (message) {
                    var validationSection = $('#ValidationSummaryEntityFormView');
                    validationSection.append($("<div class='notification alert-danger' role='alert'>" + message + "</div>"));
                    validationSection.show();
                },

                control_hide: function (fieldName, is_lookup) {
                    if (is_lookup) {
                        $("#" + fieldName).parent().parent().parent().hide();
                    }
                    else {
                        $("#" + fieldName).hide();
                        $("#" + fieldName + "_label").hide();
                    }
                },

                control_show: function (fieldName, is_lookup) {
                    if (is_lookup) {
                        $("#" + fieldName).parent().parent().parent().show();
                    }
                    else {
                        $("#" + fieldName).show();
                        $("#" + fieldName + "_label").show();
                    }
                },

                replace_special_char: function (value) {
                    var k_char_apostrophe = "&#39;";
                    value = value.replace(k_char_apostrophe, "'");
                    return value;
                },

                init: function () {
                }
            }
        }

        (function (webapi, $) {
            function safeAjax(ajaxOptions) {
                var deferredAjax = $.Deferred();

                shell.getTokenDeferred().done(function (token) {
                    // add headers for AJAX
                    if (!ajaxOptions.headers) {
                        $.extend(ajaxOptions, {
                            headers: {
                                "__RequestVerificationToken": token
                            }
                        });
                    } else {
                        ajaxOptions.headers["__RequestVerificationToken"] = token;
                    }
                    $.ajax(ajaxOptions)
                        .done(function (data, textStatus, jqXHR) {
                            validateLoginSession(data, textStatus, jqXHR, deferredAjax.resolve);
                        }).fail(deferredAjax.reject); //AJAX
                }).fail(function () {
                    deferredAjax.rejectWith(this, arguments); // on token failure pass the token AJAX and args
                });

                return deferredAjax.promise();
            }
            webapi.safeAjax = safeAjax;
        })(window.webapi = window.webapi || {}, jQuery)

    </script>
</BODY>
</HTML>
