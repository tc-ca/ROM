var IPT_Run = (function (window, document) {

    //********************private methods*******************

    var LCID;
    var messageCallFailed;
    var messageProcessStarted;
    var messageWentWrong;
    var messageAnotherRun;
    var messageSaveForm;
    var messageProceedPrompt;
    var messageWorking;
    var yesNo;

    function runIPT(runid, formContext) {

        //TO DO: localize
        Xrm.Utility.showProgressIndicator(messageWorking);

        var parameters = {};
        parameters.runid = runid;

        var ovs_IPTRunRequest = {
            runid: parameters.runid,

            getMetadata: function () {
                return {
                    boundParameter: null,
                    parameterTypes: {
                        "runid": {
                            "typeName": "Edm.String",
                            "structuralProperty": 1
                        }
                    },
                    operationType: 0,
                    operationName: "ovs_IPTRun"
                };
            }
        };

        Xrm.WebApi.online.execute(ovs_IPTRunRequest).then(
            function success(result) {

                Xrm.Utility.closeProgressIndicator();

                if (result.ok) {
                    result.text().then(function (i) {
                        var data = JSON.parse(i);
                        if (data != null || typeof data !== 'undefined') {

                            if ((data.response != null)
                                && typeof data.response !== 'undefined')
                                if (data.response.indexOf("Error") > -1) {
                                    //show error message
                                    //TO DO: localize
                                    var alertStrings = { confirmButtonLabel: yesNo, text: messageCallFailed + data.response };
                                }
                                else {
                                    //notify about call result and further notifications
                                    //TO DO: localize
                                    var alertStrings = { confirmButtonLabel: yesNo, text: messageProcessStarted };

                                    //set form read only
                                    if (IPTRun_main != null
                                        && IPTRun_main != undefined
                                        && IPTRun_main.setFormReadOnly)
                                        glHelper.SetFormReadOnly(formContext);

                                }
                            Xrm.Navigation.openAlertDialog(alertStrings);
                        }
                    }, function (error) {

                        console.log("IPT call response parse error: " + error.message);
                        //TO DO: localize
                        Xrm.Navigation.openErrorDialog({ message: messageWentWrong + error.message });
                    });
                }
            },
            function (error) {

                Xrm.Utility.closeProgressIndicator();
                console.log("IPT call error: " + error.message);
                //TO DO: localize
                Xrm.Navigation.openErrorDialog({ message: messageWentWrong + error.message });
            }
        );

    }

    function validateNoOtherRun(runid, formContext) {
        
        Xrm.WebApi.online.retrieveMultipleRecords("ovs_iptrun", "?$filter=statuscode eq 918640000").then(
            function success(results) {
                if(results.entities.length > 0) {

                    //TO DO: localize
                    var alertStrings = { confirmButtonLabel: yesNo, text: messageAnotherRun };
                    Xrm.Navigation.openAlertDialog(alertStrings);
                }
                else runIPT(runid, formContext);
            },
            function (error) {
                console.log("validateNoOtherRun error: " + error.message);
                //TO DO: localize
                Xrm.Navigation.openErrorDialog({ message: messageWentWrong + error.message });
            }
        );
    }

    function on_IPT_run(primaryControl) {

        var result = "";
        var globalContext = Xrm.Utility.getGlobalContext();
        var formContext = primaryControl;

        LCID = globalContext.userSettings.languageId;


        var resexResourceName = LCID === 1033 ? "ovs_Labels.1033.resx" : "ovs_Labels.1036.resx";

        messageCallFailed = Xrm.Utility.getResourceString(resexResourceName, "IPT.ribbon.CallFailed");
        messageProcessStarted = Xrm.Utility.getResourceString(resexResourceName, "IPT.ribbon.ProcessStarted");
        messageWentWrong = Xrm.Utility.getResourceString(resexResourceName, "IPT.ribbon.WentWrong");
        messageAnotherRun = Xrm.Utility.getResourceString(resexResourceName, "IPT.ribbon.AnotherRun");
        messageSaveForm = Xrm.Utility.getResourceString(resexResourceName, "IPT.ribbon.SaveForm");
        messageProceedPrompt = Xrm.Utility.getResourceString(resexResourceName, "IPT.ribbon.ProceedPrompt");
        messageWorking = Xrm.Utility.getResourceString(resexResourceName, "IPT.ribbon.Working");
        yesNo = LCID === 1033 ? "Yes" : "Oui";


        //check if form is saved
        if (formContext.data.getIsDirty()) {

            //TO DO: localize
            var alertStrings = { confirmButtonLabel: yesNo , text: messageSaveForm };
            Xrm.Navigation.openAlertDialog(alertStrings);
            return;
        }

        var pageInput = Xrm.Utility.getPageContext().input;
        var runid = pageInput.entityId.replace("{", "").replace("}", "");

        //notify about start
        var confirmStrings = { text: messageProceedPrompt, title: "Confirm Dialog" };
        Xrm.Navigation.openConfirmDialog(confirmStrings).then(
            function (success) {
                if (success.confirmed) {
                    //get entity id and run IPT job in Azure
                    validateNoOtherRun(runid, formContext);
                }
                else
                    console.log("Dialog closed using Cancel button or X.");
            });

        return result;
    }

    //********************public methods********************

    return {

        on_IPT_run: on_IPT_run,

    };

})(window, document);